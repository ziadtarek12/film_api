version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-8080}:${APP_PORT:-8080}"
    volumes:
      - ./cmd:/app/cmd
      - ./internal:/app/internal
      - ./migrations:/app/migrations
      - ./.env:/app/.env
      - ./go.mod:/app/go.mod
      - ./go.sum:/app/go.sum
    working_dir: /app
    command: sh -c "./bin/api -db-dsn=${FILMAPI_DB_DSN} -port=${APP_PORT:-8080} -limiter-burst=${LIMITER_BURST} -limiter-rps=${LIMITER_RPS} -limiter-enabled=${LIMITER_ENABLED}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - APP_PORT=${APP_PORT}
      - FILMAPI_DB_DSN=${FILMAPI_DB_DSN}
      - LIMITER_RPS=${LIMITER_RPS}
      - LIMITER_BURST=${LIMITER_BURST}
      - LIMITER_ENABLED=${LIMITER_ENABLED}
    networks:
      - app-network

  # db:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_ROOT_PASSWORD: ${POSTGRESS_ROOT_PASSWORD}
  #     POSTGRES_DATABASE: ${POSTGRESS_DATABASE}
  #     POSTGRES_USER: ${POSTGRESS_USER}
  #     POSTGRES_PASSWORD: ${POSTGRESS_PASSWORD}
  #   ports:
  #     - "${DB_PORT}:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRESS_USER} -d ${POSTGRESS_DATABASE}"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   postgres_data: